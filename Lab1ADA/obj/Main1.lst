GNAT GPL 2016 (20160515-49)
Copyright 1992-2016, Free Software Foundation, Inc.

Compiling: E:\\Lab1ADA\src\main.adb
Source file time stamp: 2016-09-21 18:50:28
Compiled at: 2016-09-21 22:47:16

     1. with Data, Ada.Text_IO, Ada.Integer_Text_IO, System.Multiprocessors;
     2. use Ada.Text_IO, Ada.Integer_Text_IO, System.Multiprocessors;
     3. -------------Main program-----------
     4. --Parallel and distributed computing
     5. --Lab 1
     6. --Valeriy Demchik
     7. --NTUU "KPI"
     8. --FICT IO-41
     9. --19.09.2016
    10. --F1: MC = MIN(A)*(MA*MD)
    11. --F2: MK = TRANS(MA)*TRANS(MB*MM)+MX
    12. --F3:  O = SORT(P)*(MR*MS)
    13. -----------------------------------------
    14.
    15. procedure Main is
    16.
    17.    --Dimension (N)--
    18.    n : Integer :=5;
    19.    --Initialization package--
    20.    package Lab1Data is new Data(n);
    21.    use Lab1Data;
    22.
    23.    CPU_0 :CPU_Range:=0;
    24.    CPU_1 :CPU_Range:=1;
    25.
    26.    -- Announcements tasks to perform functions F1
    27.    task T1 is
    28.       pragma Priority(9);
    29.       pragma Task_Name ("T1");
    30.       pragma Storage_Size(1000);
    31.       pragma CPU (CPU_1);
    32.    end T1;
    33.
    34.    -- Task body
    35.    task body T1 is
    36.       A: Vect;
    37.       MA,MD,MC: Matrix;
    38.
    39.    begin
    40.
    41.       delay 1.0;
    42.
    43.       --Start report
    44.       New_Line;
    45.       put("T1 started!");
    46.
    47.       --Input F1 data
    48.       New_Line;
    49.       Put("Arguments for F1");
    50.
    51.       New_Line;
    52.       Put("Vector A");
    53.       New_Line;
    54.       InputRandomVect(A);
    55.       ShowVect(A);
    56.
    57.       New_Line;
    58.       Put("Matrix MA");
    59.       New_Line;
    60.       InputRandomMatrix(MA);
    61.       ShowMatr(MA);
    62.
    63.       New_Line;
    64.       Put("Matrix MD");
    65.       New_Line;
    66.       InputRandomMatrix(MD);
    67.       ShowMatr(MD);
    68.
    69.       --Computing F1
    70.       F1(A,MA,MD,MC);
    71.
    72.       -- Show results
    73.       New_Line;
    74.       Put("F1 = ");
    75.       showMatr(MC);
    76.
    77.       --Finish report
    78.       New_Line;
    79.       put("T1 finished!");
    80.
    81.    end T1;
    82.
    83.    -- Announcements tasks to perform functions F2
    84.    task T2 is
    85.       pragma Priority(5);
    86.       pragma Task_Name ("T2");
    87.       pragma Storage_Size(1000);
    88.       pragma CPU (CPU_0);
    89.    end T2;
    90.
    91.    -- Task body
    92.    task body T2 is
    93.       MA,MB,MM,MK,MX: Matrix;
    94.
    95.    begin
    96.
    97.       delay 5.0;
    98.
    99.       --Start report
   100.       New_Line;
   101.       put("T2 started!");
   102.
   103.       --Input F1 data
   104.       New_Line;
   105.       Put("Arguments for F2");
   106.
   107.       New_Line;
   108.       Put("Matrix MA");
   109.       New_Line;
   110.       InputRandomMatrix(MA);
   111.       ShowMatr(MA);
   112.
   113.       New_Line;
   114.       Put("Matrix MB");
   115.       New_Line;
   116.       InputRandomMatrix(MB);
   117.       ShowMatr(MB);
   118.
   119.       New_Line;
   120.       Put("Matrix MM");
   121.       New_Line;
   122.       InputRandomMatrix(MM);
   123.       ShowMatr(MM);
   124.
   125.       New_Line;
   126.       Put("Matrix MX");
   127.       New_Line;
   128.       InputRandomMatrix(MX);
   129.       ShowMatr(MX);
   130.
   131.       --Computing F1
   132.       F2(MA,MB,MM,MX,MK);
   133.
   134.       -- Show results
   135.       New_Line;
   136.       Put("F2 = ");
   137.       ShowMatr(MK);
   138.
   139.       --Finish report
   140.       New_Line;
   141.       put("T2 finished!");
   142.
   143.    end T2;
   144.
   145.    -- Announcements tasks to perform functions F3
   146.    task T3 is
   147.       pragma Priority(1);
   148.       pragma Task_Name ("T3");
   149.       pragma Storage_Size(1000);
   150.       pragma CPU (CPU_0);
   151.    end T3;
   152.
   153.    -- Task body
   154.    task body T3 is
   155.       O,P: Vect;
   156.       MR,MS: Matrix;
   157.
   158.    begin
   159.
   160.       delay 9.0;
   161.
   162.       --Start report
   163.       New_Line;
   164.       put("T3 started!");
   165.
   166.       --Input F1 data
   167.       New_Line;
   168.       Put("Arguments for F3");
   169.
   170.       New_Line;
   171.       Put("Vector P");
   172.       New_Line;
   173.       InputRandomVect(P);
   174.       ShowVect(P);
   175.
   176.       New_Line;
   177.       Put("Matrix MR");
   178.       New_Line;
   179.       InputRandomMatrix(MR);
   180.       ShowMatr(MR);
   181.
   182.       New_Line;
   183.       Put("Matrix MS");
   184.       New_Line;
   185.       InputRandomMatrix(MS);
   186.       ShowMatr(MS);
   187.
   188.       --Computing F3
   189.       F3(P,MR,MS,O);
   190.
   191.       -- Show results
   192.       New_Line;
   193.       Put("F3 = ");
   194.       ShowVect(O);
   195.
   196.       --Finish report
   197.       New_Line;
   198.       put("T3 finished!");
   199.
   200.    end T3;
   201.
   202. begin
   203.    Put("Lab 1");
   204.    New_Line;
   205.    Put("Dimension of all vectors and matrix is ");
   206.    Put(n);
   207.    Put(" arguments.");
   208.    if N>5 then
   209.       New_Line;
   210.       Put("Results will not be displayed.");
   211.    end if;
   212. end Main;
   213.
   214.

 214 lines: No errors
